{
  "contractName": "ZombieAttack",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "zombieId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        }
      ],
      "name": "NewZombie",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_newDna",
          "type": "uint256"
        }
      ],
      "name": "changeDna",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_newName",
          "type": "string"
        }
      ],
      "name": "changeName",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "createRandomZombie",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_kittyId",
          "type": "uint256"
        }
      ],
      "name": "feedOnKitty",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "getZombiesByOwner",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        }
      ],
      "name": "levelUp",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setKittyContractAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setLevelUpFee",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombieToOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "zombies",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dna",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "level",
          "type": "uint32"
        },
        {
          "internalType": "uint32",
          "name": "readyTime",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_zombieId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetId",
          "type": "uint256"
        }
      ],
      "name": "attack",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"zombieId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"}],\"name\":\"NewZombie\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetId\",\"type\":\"uint256\"}],\"name\":\"attack\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newDna\",\"type\":\"uint256\"}],\"name\":\"changeDna\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_newName\",\"type\":\"string\"}],\"name\":\"changeName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"createRandomZombie\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_kittyId\",\"type\":\"uint256\"}],\"name\":\"feedOnKitty\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getZombiesByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_zombieId\",\"type\":\"uint256\"}],\"name\":\"levelUp\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setKittyContractAddress\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombieToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"zombies\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dna\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"level\",\"type\":\"uint32\"},{\"internalType\":\"uint32\",\"name\":\"readyTime\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/mnt/c/pr0/crypto-zombies/contracts/zombieattack.sol\":\"ZombieAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/mnt/c/pr0/crypto-zombies/contracts/ownable.sol\":{\"keccak256\":\"0x342b17c22cc530ff8464e9038645a8934a5af5336aca9a18ebf63f05fecb93f0\",\"urls\":[\"bzz-raw://c12888cfaa77026189c4c40600e6ec8e32dcffd31e12421dd4f24de329552f2b\",\"dweb:/ipfs/QmUsMqBKac4YaLz3LVyssrQ3EpVpnF6o8NV16AYM9c8tcj\"]},\"/mnt/c/pr0/crypto-zombies/contracts/zombieattack.sol\":{\"keccak256\":\"0xe11e0738365baed6327ba650b9cd5c3059f617aec0e30f78ee9dd98f0b0f5b9b\",\"urls\":[\"bzz-raw://9d4545f88dbbc4a375c9ec3a8d53223d0aad53431c1018bb9dd35eded6849d75\",\"dweb:/ipfs/QmcgJVgfjE4N2Rcx2UchgCnHaGVDYTLQR5hjVvKCxSKHyH\"]},\"/mnt/c/pr0/crypto-zombies/contracts/zombiefactory.sol\":{\"keccak256\":\"0xb4d34503f80766bc8839901413a4342005263f59f5055575ea729e7b90a41a06\",\"urls\":[\"bzz-raw://bf017b289da3ce59f2b1e93fad44a5047f3b04b36475928e3582b531b6abd1bd\",\"dweb:/ipfs/QmdcQxfvwsH2qTEZwTSheDub7FjJVVvNnSKYHqQpwierpY\"]},\"/mnt/c/pr0/crypto-zombies/contracts/zombiefeeding.sol\":{\"keccak256\":\"0xb7c956f768e02e0ac08e0bf74c32b206f67142fea57176d9638c47b11467f990\",\"urls\":[\"bzz-raw://57cf103c2aac63dec304b96777df211ce23677c113c6cee303d81ed38c33fd60\",\"dweb:/ipfs/QmR4C2LAdJ62WEQznYPQenumVZbhAzJQZqJZF22Rxg5WRh\"]},\"/mnt/c/pr0/crypto-zombies/contracts/zombiehelper.sol\":{\"keccak256\":\"0x99bfb38af6f71290d72328877de0144900e5e4155d6ac21887ae127a54b75747\",\"urls\":[\"bzz-raw://c1c51fbd65d86622e241d07494a46a01d233b64b7ab49a6fb93dcc712b731d8e\",\"dweb:/ipfs/QmYWVAxpkfEstkhax8gB1U8NhQfaHrtEuwbPw9hTECuvCG\"]}},\"version\":1}",
  "bytecode": "0x60806040526010600155600154600a0a6002556201518060035566038d7ea4c680006008556000600955336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3611824806100f46000396000f3fe6080604052600436106100f35760003560e01c8063715018a61161008a578063c39cbef111610059578063c39cbef11461057f578063ccf670f81461060f578063e1fa76381461064a578063f2fde38b1461068f576100f3565b8063715018a61461041a5780637bff0a01146104315780638da5cb5b146104f95780638f32d59b14610550576100f3565b80634412e104116100c65780634412e10414610263578063528b7b8f146103095780635f4623f1146103845780635faf2880146103d5576100f3565b80630ce90ec2146100f857806317a7f4cc146101265780632052465e1461016b5780633ccfd60b1461024c575b600080fd5b6101246004803603602081101561010e57600080fd5b81019080803590602001909291905050506106e0565b005b34801561013257600080fd5b506101696004803603604081101561014957600080fd5b810190808035906020019092919080359060200190929190505050610748565b005b34801561017757600080fd5b506101a46004803603602081101561018e57600080fd5b81019080803590602001909291905050506108d3565b60405180806020018581526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001828103825286818151815260200191508051906020019080838360005b8381101561020e5780820151818401526020810190506101f3565b50505050905090810190601f16801561023b5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561025857600080fd5b506102616109c8565b005b34801561026f57600080fd5b506102b26004803603602081101561028657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a2f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102f55780820151818401526020810190506102da565b505050509050019250505060405180910390f35b34801561031557600080fd5b506103426004803603602081101561032c57600080fd5b8101908080359060200190929190505050610b5c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039057600080fd5b506103d3600480360360208110156103a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b8f565b005b3480156103e157600080fd5b50610418600480360360408110156103f857600080fd5b810190808035906020019092919080359060200190929190505050610be4565b005b34801561042657600080fd5b5061042f610cbe565b005b34801561043d57600080fd5b506104f76004803603602081101561045457600080fd5b810190808035906020019064010000000081111561047157600080fd5b82018360208201111561048357600080fd5b803590602001918460018302840111640100000000831117156104a557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610d8e565b005b34801561050557600080fd5b5061050e610df5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055c57600080fd5b50610565610e1e565b604051808215151515815260200191505060405180910390f35b34801561058b57600080fd5b5061060d600480360360408110156105a257600080fd5b8101908080359060200190929190803590602001906401000000008111156105c957600080fd5b8201836020820111156105db57600080fd5b803590602001918460018302840111640100000000831117156105fd57600080fd5b9091929391929390505050610e75565b005b34801561061b57600080fd5b506106486004803603602081101561063257600080fd5b8101908080359060200190929190505050610f5b565b005b34801561065657600080fd5b5061068d6004803603604081101561066d57600080fd5b810190808035906020019092919080359060200190929190505050610f76565b005b34801561069b57600080fd5b506106de600480360360208110156106b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611036565b005b60085434146106ee57600080fd5b600481815481106106fb57fe5b9060005260206000209060030201600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b1580156107be57600080fd5b505afa1580156107d2573d6000803e3d6000fd5b505050506040513d6101408110156107e957600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050909192939495969798509091929394959697509091929394959650909192939495509091929394509091929350909192509091509050809150506108ce83826040518060400160405280600581526020017f6b69747479000000000000000000000000000000000000000000000000000000815250611053565b505050565b600481815481106108e057fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561098c5780601f106109615761010080835404028352916020019161098c565b820191906000526020600020905b81548152906001019060200180831161096f57829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16905084565b6109d0610e1e565b6109d957600080fd5b60006109e3610df5565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610a2b573d6000803e3d6000fd5b5050565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610aa05781602001602082028038833980820191505090505b509050600080905060008090505b600480549050811015610b51578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b445780838381518110610b2f57fe5b60200260200101818152505081806001019250505b8080600101915050610aae565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b97610e1e565b610ba057600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160048281548110610bf557fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610c2857600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c9457600080fd5b8360048681548110610ca257fe5b9060005260206000209060030201600101819055505050505050565b610cc6610e1e565b610ccf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610dda57600080fd5b6000610de582611235565b9050610df182826112c3565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6002838160048281548110610e8657fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610eb957600080fd5b846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f2557600080fd5b848460048881548110610f3457fe5b90600052602060002090600302016000019190610f529291906116ca565b50505050505050565b610f63610e1e565b610f6c57600080fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fe257600080fd5b600060048481548110610ff157fe5b9060005260206000209060030201905060006004848154811061101057fe5b90600052602060002090600302019050600061102c60646114f2565b9050505050505050565b61103e610e1e565b61104757600080fd5b61105081611581565b50565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110bf57600080fd5b6000600485815481106110ce57fe5b906000526020600020906003020190506110e781611679565b6110f057600080fd5b60025484816110fb57fe5b06935060006002858360010154018161111057fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b60208310611191578051825260208201915060208101905060208303925061116e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156111e5576063606482816111de57fe5b0682030190505b6112246040518060400160405280600681526020017f4e6f4e616d650000000000000000000000000000000000000000000000000000815250826112c3565b61122d826116a0565b505050505050565b600080826040516020018082805190602001908083835b6020831061126f578051825260208201915060208101905060208303925061124c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c905060025481816112ba57fe5b06915050919050565b6000600160046040518060800160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001908051906020019061134292919061174a565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156114b1578082015181840152602081019050611496565b50505050905090810190601f1680156114de5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b6000600960008154809291906001019190505550814233600954604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c8161157957fe5b069050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115bb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061170b57803560ff1916838001178555611739565b82800160010185558215611739579182015b8281111561173857823582559160200191906001019061171d565b5b50905061174691906117ca565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061178b57805160ff19168380011785556117b9565b828001600101855582156117b9579182015b828111156117b857825182559160200191906001019061179d565b5b5090506117c691906117ca565b5090565b6117ec91905b808211156117e85760008160009055506001016117d0565b5090565b9056fea265627a7a72315820d2c8be3ef23649a76a832b3b739d40aa11ca52aa5169225eb62049002e52352164736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106100f35760003560e01c8063715018a61161008a578063c39cbef111610059578063c39cbef11461057f578063ccf670f81461060f578063e1fa76381461064a578063f2fde38b1461068f576100f3565b8063715018a61461041a5780637bff0a01146104315780638da5cb5b146104f95780638f32d59b14610550576100f3565b80634412e104116100c65780634412e10414610263578063528b7b8f146103095780635f4623f1146103845780635faf2880146103d5576100f3565b80630ce90ec2146100f857806317a7f4cc146101265780632052465e1461016b5780633ccfd60b1461024c575b600080fd5b6101246004803603602081101561010e57600080fd5b81019080803590602001909291905050506106e0565b005b34801561013257600080fd5b506101696004803603604081101561014957600080fd5b810190808035906020019092919080359060200190929190505050610748565b005b34801561017757600080fd5b506101a46004803603602081101561018e57600080fd5b81019080803590602001909291905050506108d3565b60405180806020018581526020018463ffffffff1663ffffffff1681526020018363ffffffff1663ffffffff168152602001828103825286818151815260200191508051906020019080838360005b8381101561020e5780820151818401526020810190506101f3565b50505050905090810190601f16801561023b5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561025857600080fd5b506102616109c8565b005b34801561026f57600080fd5b506102b26004803603602081101561028657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610a2f565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156102f55780820151818401526020810190506102da565b505050509050019250505060405180910390f35b34801561031557600080fd5b506103426004803603602081101561032c57600080fd5b8101908080359060200190929190505050610b5c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561039057600080fd5b506103d3600480360360208110156103a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610b8f565b005b3480156103e157600080fd5b50610418600480360360408110156103f857600080fd5b810190808035906020019092919080359060200190929190505050610be4565b005b34801561042657600080fd5b5061042f610cbe565b005b34801561043d57600080fd5b506104f76004803603602081101561045457600080fd5b810190808035906020019064010000000081111561047157600080fd5b82018360208201111561048357600080fd5b803590602001918460018302840111640100000000831117156104a557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610d8e565b005b34801561050557600080fd5b5061050e610df5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561055c57600080fd5b50610565610e1e565b604051808215151515815260200191505060405180910390f35b34801561058b57600080fd5b5061060d600480360360408110156105a257600080fd5b8101908080359060200190929190803590602001906401000000008111156105c957600080fd5b8201836020820111156105db57600080fd5b803590602001918460018302840111640100000000831117156105fd57600080fd5b9091929391929390505050610e75565b005b34801561061b57600080fd5b506106486004803603602081101561063257600080fd5b8101908080359060200190929190505050610f5b565b005b34801561065657600080fd5b5061068d6004803603604081101561066d57600080fd5b810190808035906020019092919080359060200190929190505050610f76565b005b34801561069b57600080fd5b506106de600480360360208110156106b257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611036565b005b60085434146106ee57600080fd5b600481815481106106fb57fe5b9060005260206000209060030201600201600081819054906101000a900463ffffffff168092919060010191906101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e98b7f4d836040518263ffffffff1660e01b8152600401808281526020019150506101406040518083038186803b1580156107be57600080fd5b505afa1580156107d2573d6000803e3d6000fd5b505050506040513d6101408110156107e957600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291908051906020019092919080519060200190929190505050909192939495969798509091929394959697509091929394959650909192939495509091929394509091929350909192509091509050809150506108ce83826040518060400160405280600581526020017f6b69747479000000000000000000000000000000000000000000000000000000815250611053565b505050565b600481815481106108e057fe5b9060005260206000209060030201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561098c5780601f106109615761010080835404028352916020019161098c565b820191906000526020600020905b81548152906001019060200180831161096f57829003601f168201915b5050505050908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900463ffffffff16905084565b6109d0610e1e565b6109d957600080fd5b60006109e3610df5565b90508073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610a2b573d6000803e3d6000fd5b5050565b606080600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054604051908082528060200260200182016040528015610aa05781602001602082028038833980820191505090505b509050600080905060008090505b600480549050811015610b51578473ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610b445780838381518110610b2f57fe5b60200260200101818152505081806001019250505b8080600101915050610aae565b508192505050919050565b60056020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610b97610e1e565b610ba057600080fd5b80600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6014828160048281548110610bf557fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610c2857600080fd5b836005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c9457600080fd5b8360048681548110610ca257fe5b9060005260206000209060030201600101819055505050505050565b610cc6610e1e565b610ccf57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205414610dda57600080fd5b6000610de582611235565b9050610df182826112c3565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b6002838160048281548110610e8657fe5b906000526020600020906003020160020160009054906101000a900463ffffffff1663ffffffff161015610eb957600080fd5b846005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f2557600080fd5b848460048881548110610f3457fe5b90600052602060002090600302016000019190610f529291906116ca565b50505050505050565b610f63610e1e565b610f6c57600080fd5b8060088190555050565b816005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fe257600080fd5b600060048481548110610ff157fe5b9060005260206000209060030201905060006004848154811061101057fe5b90600052602060002090600302019050600061102c60646114f2565b9050505050505050565b61103e610e1e565b61104757600080fd5b61105081611581565b50565b826005600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110bf57600080fd5b6000600485815481106110ce57fe5b906000526020600020906003020190506110e781611679565b6110f057600080fd5b60025484816110fb57fe5b06935060006002858360010154018161111057fe5b04905060405160200180807f6b69747479000000000000000000000000000000000000000000000000000000815250600501905060405160208183030381529060405280519060200120846040516020018082805190602001908083835b60208310611191578051825260208201915060208101905060208303925061116e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012014156111e5576063606482816111de57fe5b0682030190505b6112246040518060400160405280600681526020017f4e6f4e616d650000000000000000000000000000000000000000000000000000815250826112c3565b61122d826116a0565b505050505050565b600080826040516020018082805190602001908083835b6020831061126f578051825260208201915060208101905060208303925061124c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012060001c905060025481816112ba57fe5b06915050919050565b6000600160046040518060800160405280868152602001858152602001600163ffffffff168152602001600354420163ffffffff1681525090806001815401808255809150509060018203906000526020600020906003020160009091929091909150600082015181600001908051906020019061134292919061174a565b506020820151816001015560408201518160020160006101000a81548163ffffffff021916908363ffffffff16021790555060608201518160020160046101000a81548163ffffffff021916908363ffffffff1602179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600081548092919060010191905055507f88f026aacbbecc90c18411df4b1185fd8d9be2470f1962f192bf84a27d0704b78184846040518084815260200180602001838152602001828103825284818151815260200191508051906020019080838360005b838110156114b1578082015181840152602081019050611496565b50505050905090810190601f1680156114de5780820380516001836020036101000a031916815260200191505b5094505050505060405180910390a1505050565b6000600960008154809291906001019190505550814233600954604051602001808481526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140182815260200193505050506040516020818303038152906040528051906020012060001c8161157957fe5b069050919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156115bb57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000428260020160049054906101000a900463ffffffff1663ffffffff1611159050919050565b60035442018160020160046101000a81548163ffffffff021916908363ffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061170b57803560ff1916838001178555611739565b82800160010185558215611739579182015b8281111561173857823582559160200191906001019061171d565b5b50905061174691906117ca565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061178b57805160ff19168380011785556117b9565b828001600101855582156117b9579182015b828111156117b857825182559160200191906001019061179d565b5b5090506117c691906117ca565b5090565b6117ec91905b808211156117e85760008160009055506001016117d0565b5090565b9056fea265627a7a72315820d2c8be3ef23649a76a832b3b739d40aa11ca52aa5169225eb62049002e52352164736f6c63430005100032",
  "sourceMap": "67:491:1:-;;;249:2:2;232:19;;282:9;;276:2;:15;258:33;;318:6;298:26;;134:11:4;116:29;;131:1:1;114:18;;566:10:0;557:6;;:19;;;;;;;;;;;;;;;;;;625:6;;;;;;;;;;;592:40;;621:1;592:40;;;;;;;;;;;;67:491:1;;;;;;",
  "deployedSourceMap": "67:491:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:138:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;551:138:4;;;;;;;;;;;;;;;;;:::i;:::-;;1615:210:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1615:210:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1615:210:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;454:23:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:23:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;454:23:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;454:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:157:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;289:157:4;;;:::i;:::-;;1035:399;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1035:399:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1035:399:4;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1035:399:4;;;;;;;;;;;;;;;;;486:46:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;486:46:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;486:46:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;657:129:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;657:129:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;657:129:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;873:154:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;873:154:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;873:154:4;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1408:140:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1408:140:0;;;:::i;:::-;;1216:208:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1216:208:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1216:208:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1216:208:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1216:208:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1216:208:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1216:208:2;;;;;;;;;;;;;;;:::i;:::-;;706:78:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;706:78:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1036:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1036:91:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;697:168:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;697:168:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;697:168:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;697:168:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;697:168:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;697:168:4;;;;;;;;;;;;:::i;:::-;;454:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:89:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;454:89:4;;;;;;;;;;;;;;;;;:::i;:::-;;323:232:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;323:232:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;323:232:1;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1722:109:0;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1722:109:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1722:109:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;551:138:4;633:10;;620:9;:23;612:32;;;;;;655:7;663:9;655:18;;;;;;;;;;;;;;;;;;:24;;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;551:138;:::o;1615:210:3:-;1685:13;1731;;;;;;;;;;;:22;;;1754:8;1731:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1731:32:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1731:32:3;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1731:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1709:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1774:45;1790:9;1801:8;1774:45;;;;;;;;;;;;;;;;;:15;:45::i;:::-;1615:210;;;:::o;454:23:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;289:157:4:-;915:9:0;:7;:9::i;:::-;907:18;;;;;;339:22:4;380:7;:5;:7::i;:::-;339:50;;400:6;:15;;:38;416:21;400:38;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;400:38:4;936:1:0;289:157:4:o;1035:399::-;1100:13;1126:20;1160:16;:24;1177:6;1160:24;;;;;;;;;;;;;;;;1149:36;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;1149:36:4;;;;1126:59;;1196:12;1211:1;1196:16;;1227:6;1236:1;1227:10;;1223:180;1243:7;:14;;;;1239:1;:18;1223:180;;;1302:6;1282:26;;:13;:16;1296:1;1282:16;;;;;;;;;;;;;;;;;;;;;:26;;;1279:113;;;1347:1;1329:6;1336:7;1329:15;;;;;;;;;;;;;:19;;;;;1367:9;;;;;;;1279:113;1259:3;;;;;;;1223:180;;;;1420:6;1413:13;;;;1035:399;;;:::o;486:46:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;657:129:3:-;915:9:0;:7;:9::i;:::-;907:18;;;;;;769:8:3;738:13;;:40;;;;;;;;;;;;;;;;;;657:129;:::o;873:154:4:-;942:2;946:9;254:6;226:7;234:9;226:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;218:43;;;;;;965:9;600:13:3;:24;614:9;600:24;;;;;;;;;;;;;;;;;;;;;586:38;;:10;:38;;;578:47;;;;;;1012:7:4;987;995:9;987:18;;;;;;;;;;;;;;;;;;:22;;:32;;;;272:1;873:154;;;;:::o;1408:140:0:-;915:9;:7;:9::i;:::-;907:18;;;;;;1507:1;1470:40;;1491:6;;;;;;;;;;;1470:40;;;;;;;;;;;;1538:1;1521:6;;:19;;;;;;;;;;;;;;;;;;1408:140::o;1216:208:2:-;1323:1;1291:16;:28;1308:10;1291:28;;;;;;;;;;;;;;;;:33;1283:42;;;;;;1336:12;1351:25;1370:5;1351:18;:25::i;:::-;1336:40;;1387:29;1401:5;1408:7;1387:13;:29::i;:::-;1216:208;;:::o;706:78:0:-;743:7;770:6;;;;;;;;;;;763:13;;706:78;:::o;1036:91::-;1075:4;1113:6;;;;;;;;;;;1099:20;;:10;:20;;;1092:27;;1036:91;:::o;697:168:4:-;779:1;782:9;254:6;226:7;234:9;226:18;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;:34;;;;218:43;;;;;;801:9;600:13:3;:24;614:9;600:24;;;;;;;;;;;;;;;;;;;;;586:38;;:10;:38;;;578:47;;;;;;849:8:4;;823:7;831:9;823:18;;;;;;;;;;;;;;;;;;:23;;:34;;;;;;;:::i;:::-;;272:1;697:168;;;;;:::o;454:89::-;915:9:0;:7;:9::i;:::-;907:18;;;;;;531:4:4;518:10;:17;;;;454:89;:::o;323:232:1:-;388:9;600:13:3;:24;614:9;600:24;;;;;;;;;;;;;;;;;;;;;586:38;;:10;:38;;;578:47;;;;;;410:23:1;436:7;444:9;436:18;;;;;;;;;;;;;;;;;;410:44;;465:26;494:7;502:9;494:18;;;;;;;;;;;;;;;;;;465:47;;523:9;535:12;543:3;535:7;:12::i;:::-;523:24;;636:1:3;;;323:232:1;;;:::o;1722:109:0:-;915:9;:7;:9::i;:::-;907:18;;;;;;1795:28;1814:8;1795:18;:28::i;:::-;1722:109;:::o;1060:547:3:-;1159:9;600:13;:24;614:9;600:24;;;;;;;;;;;;;;;;;;;;;586:38;;:10;:38;;;578:47;;;;;;1181:23;1207:7;1215:9;1207:18;;;;;;;;;;;;;;;;;;1181:44;;1244:18;1253:8;1244;:18::i;:::-;1236:27;;;;;;1300:10;;1287;:23;;;;;;1274:36;;1321:11;1365:1;1351:10;1336:8;:12;;;:25;1335:31;;;;;;1321:45;;1431:25;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1431:25:3;;;1421:36;;;;;;1407:8;1390:26;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1390:26:3;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1390:26:3;;;1380:37;;;;;;:77;1377:144;;;1507:2;1501:3;1492:6;:12;;;;;;1483:6;:21;:26;1474:35;;1377:144;1531:31;;;;;;;;;;;;;;;;;;1555:6;1531:13;:31::i;:::-;1573:26;1590:8;1573:16;:26::i;:::-;636:1;;1060:547;;;;:::o;982:181:2:-;1052:4;1069:9;1113:4;1096:22;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1096:22:2;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1096:22:2;;;1086:33;;;;;;1081:39;;1069:51;;1145:10;;1138:4;:17;;;;;;1131:24;;;982:181;;;:::o;637:286::-;712:7;789:1;722:7;735:50;;;;;;;;742:5;735:50;;;;749:4;735:50;;;;755:1;735:50;;;;;;771:12;;765:3;:18;735:50;;;;;722:64;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;722:64:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:68;712:78;;821:10;801:13;:17;815:2;801:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;842:16;:28;859:10;842:28;;;;;;;;;;;;;;;;:31;;;;;;;;;;;;;889:26;899:2;903:5;910:4;889:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;889:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;637:286;;;:::o;139:175:1:-;188:4;205:9;;:11;;;;;;;;;;;;;298:8;266:3;271:10;283:9;;249:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;249:44:1;;;239:55;;;;;;234:61;;:72;;;;;;227:79;;139:175;;;:::o;1978:187:0:-;2072:1;2052:22;;:8;:22;;;;2044:31;;;;;;2120:8;2091:38;;2112:6;;;;;;;;;;;2091:38;;;;;;;;;;;;2149:8;2140:6;;:17;;;;;;;;;;;;;;;;;;1978:187;:::o;926:122:3:-;990:4;1036:3;1015:7;:17;;;;;;;;;;;;:24;;;;1007:33;;926:122;;;:::o;794:124::-;897:12;;891:3;:18;864:7;:17;;;:46;;;;;;;;;;;;;;;;;;794:124;:::o;67:491:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity >=0.5.0 <0.6.0;\r\n\r\nimport \"./zombiehelper.sol\";\r\n\r\ncontract ZombieAttack is ZombieHelper {\r\n\r\n    uint randNonce = 0;\r\n    function randMod(uint _modulus) internal returns(uint) {\r\n        randNonce++;\r\n        return uint(keccak256(abi.encodePacked(now, msg.sender, randNonce))) % _modulus;\r\n    } \r\n\r\n    function attack(uint _zombieId, uint _targetId) external ownerOf(_zombieId) {\r\n        Zombie storage myZombie = zombies[_zombieId];\r\n        Zombie storage enemyZombie = zombies[_targetId];\r\n        uint rand = randMod(100);\r\n    }\r\n}",
  "sourcePath": "/mnt/c/pr0/crypto-zombies/contracts/zombieattack.sol",
  "ast": {
    "absolutePath": "/mnt/c/pr0/crypto-zombies/contracts/zombieattack.sol",
    "exportedSymbols": {
      "ZombieAttack": [
        171
      ]
    },
    "id": 172,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 110,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:31:1"
      },
      {
        "absolutePath": "/mnt/c/pr0/crypto-zombies/contracts/zombiehelper.sol",
        "file": "./zombiehelper.sol",
        "id": 111,
        "nodeType": "ImportDirective",
        "scope": 172,
        "sourceUnit": 685,
        "src": "35:28:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 112,
              "name": "ZombieHelper",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 684,
              "src": "92:12:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZombieHelper_$684",
                "typeString": "contract ZombieHelper"
              }
            },
            "id": 113,
            "nodeType": "InheritanceSpecifier",
            "src": "92:12:1"
          }
        ],
        "contractDependencies": [
          108,
          310,
          503,
          684
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 171,
        "linearizedBaseContracts": [
          171,
          684,
          503,
          310,
          108
        ],
        "name": "ZombieAttack",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 116,
            "name": "randNonce",
            "nodeType": "VariableDeclaration",
            "scope": 171,
            "src": "114:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 114,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "114:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 115,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "131:1:1",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 140,
              "nodeType": "Block",
              "src": "194:120:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "205:11:1",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 123,
                      "name": "randNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 116,
                      "src": "205:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "205:11:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 130,
                                  "name": "now",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 701,
                                  "src": "266:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 131,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 699,
                                    "src": "271:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": null,
                                  "src": "271:10:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 133,
                                  "name": "randNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 116,
                                  "src": "283:9:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 128,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 686,
                                  "src": "249:3:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "249:16:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 134,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "249:44:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 127,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 693,
                            "src": "239:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "239:55:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        ],
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "234:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": "uint"
                      },
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "234:61:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 137,
                      "name": "_modulus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 118,
                      "src": "298:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "234:72:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 122,
                  "id": 139,
                  "nodeType": "Return",
                  "src": "227:79:1"
                }
              ]
            },
            "documentation": null,
            "id": 141,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "randMod",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "_modulus",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "156:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "156:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "155:15:1"
            },
            "returnParameters": {
              "id": 122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 141,
                  "src": "188:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "187:6:1"
            },
            "scope": 171,
            "src": "139:175:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 169,
              "nodeType": "Block",
              "src": "399:156:1",
              "statements": [
                {
                  "assignments": [
                    152
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 152,
                      "name": "myZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "410:23:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$204_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 151,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 204,
                        "src": "410:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$204_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 156,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 153,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "436:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$204_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 155,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 154,
                      "name": "_zombieId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 143,
                      "src": "444:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "436:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$204_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "410:44:1"
                },
                {
                  "assignments": [
                    158
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 158,
                      "name": "enemyZombie",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "465:26:1",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Zombie_$204_storage_ptr",
                        "typeString": "struct ZombieFactory.Zombie"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 157,
                        "name": "Zombie",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 204,
                        "src": "465:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Zombie_$204_storage_ptr",
                          "typeString": "struct ZombieFactory.Zombie"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 162,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 159,
                      "name": "zombies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "494:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Zombie_$204_storage_$dyn_storage",
                        "typeString": "struct ZombieFactory.Zombie storage ref[] storage ref"
                      }
                    },
                    "id": 161,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 160,
                      "name": "_targetId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "502:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "494:18:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Zombie_$204_storage",
                      "typeString": "struct ZombieFactory.Zombie storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "465:47:1"
                },
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "scope": 169,
                      "src": "523:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 163,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "523:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 168,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "313030",
                        "id": 166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "543:3:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 165,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 141,
                      "src": "535:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "535:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "523:24:1"
                }
              ]
            },
            "documentation": null,
            "id": 170,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 148,
                    "name": "_zombieId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 143,
                    "src": "388:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 149,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 147,
                  "name": "ownerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 358,
                  "src": "380:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "380:18:1"
              }
            ],
            "name": "attack",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 143,
                  "name": "_zombieId",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "339:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "339:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "name": "_targetId",
                  "nodeType": "VariableDeclaration",
                  "scope": 170,
                  "src": "355:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "338:32:1"
            },
            "returnParameters": {
              "id": 150,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "399:0:1"
            },
            "scope": 171,
            "src": "323:232:1",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 172,
        "src": "67:491:1"
      }
    ],
    "src": "0:558:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/mnt/c/pr0/crypto-zombies/contracts/zombieattack.sol",
      "exportedSymbols": {
        "ZombieAttack": [
          171
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 110,
        "name": "PragmaDirective",
        "src": "0:31:1"
      },
      {
        "attributes": {
          "SourceUnit": 685,
          "absolutePath": "/mnt/c/pr0/crypto-zombies/contracts/zombiehelper.sol",
          "file": "./zombiehelper.sol",
          "scope": 172,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 111,
        "name": "ImportDirective",
        "src": "35:28:1"
      },
      {
        "attributes": {
          "contractDependencies": [
            108,
            310,
            503,
            684
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            171,
            684,
            503,
            310,
            108
          ],
          "name": "ZombieAttack",
          "scope": 172
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ZombieHelper",
                  "referencedDeclaration": 684,
                  "type": "contract ZombieHelper"
                },
                "id": 112,
                "name": "UserDefinedTypeName",
                "src": "92:12:1"
              }
            ],
            "id": 113,
            "name": "InheritanceSpecifier",
            "src": "92:12:1"
          },
          {
            "attributes": {
              "constant": false,
              "name": "randNonce",
              "scope": 171,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint",
                  "type": "uint256"
                },
                "id": 114,
                "name": "ElementaryTypeName",
                "src": "114:4:1"
              },
              {
                "attributes": {
                  "argumentTypes": null,
                  "hexvalue": "30",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "subdenomination": null,
                  "token": "number",
                  "type": "int_const 0",
                  "value": "0"
                },
                "id": 115,
                "name": "Literal",
                "src": "131:1:1"
              }
            ],
            "id": 116,
            "name": "VariableDeclaration",
            "src": "114:18:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "randMod",
              "scope": 171,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_modulus",
                      "scope": 141,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 117,
                        "name": "ElementaryTypeName",
                        "src": "156:4:1"
                      }
                    ],
                    "id": 118,
                    "name": "VariableDeclaration",
                    "src": "156:13:1"
                  }
                ],
                "id": 119,
                "name": "ParameterList",
                "src": "155:15:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 141,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 120,
                        "name": "ElementaryTypeName",
                        "src": "188:4:1"
                      }
                    ],
                    "id": 121,
                    "name": "VariableDeclaration",
                    "src": "188:4:1"
                  }
                ],
                "id": 122,
                "name": "ParameterList",
                "src": "187:6:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "++",
                          "prefix": false,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 116,
                              "type": "uint256",
                              "value": "randNonce"
                            },
                            "id": 123,
                            "name": "Identifier",
                            "src": "205:9:1"
                          }
                        ],
                        "id": 124,
                        "name": "UnaryOperation",
                        "src": "205:11:1"
                      }
                    ],
                    "id": 125,
                    "name": "ExpressionStatement",
                    "src": "205:11:1"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 122
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "%",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(uint256)",
                                  "value": "uint"
                                },
                                "id": 126,
                                "name": "ElementaryTypeNameExpression",
                                "src": "234:4:1"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "bytes32",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 693,
                                      "type": "function (bytes memory) pure returns (bytes32)",
                                      "value": "keccak256"
                                    },
                                    "id": 127,
                                    "name": "Identifier",
                                    "src": "239:9:1"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "type": "bytes memory",
                                      "type_conversion": false
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            {
                                              "typeIdentifier": "t_address_payable",
                                              "typeString": "address payable"
                                            },
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "member_name": "encodePacked",
                                          "referencedDeclaration": null,
                                          "type": "function () pure returns (bytes memory)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 686,
                                              "type": "abi",
                                              "value": "abi"
                                            },
                                            "id": 128,
                                            "name": "Identifier",
                                            "src": "249:3:1"
                                          }
                                        ],
                                        "id": 129,
                                        "name": "MemberAccess",
                                        "src": "249:16:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 701,
                                          "type": "uint256",
                                          "value": "now"
                                        },
                                        "id": 130,
                                        "name": "Identifier",
                                        "src": "266:3:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "member_name": "sender",
                                          "referencedDeclaration": null,
                                          "type": "address payable"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "argumentTypes": null,
                                              "overloadedDeclarations": [
                                                null
                                              ],
                                              "referencedDeclaration": 699,
                                              "type": "msg",
                                              "value": "msg"
                                            },
                                            "id": 131,
                                            "name": "Identifier",
                                            "src": "271:3:1"
                                          }
                                        ],
                                        "id": 132,
                                        "name": "MemberAccess",
                                        "src": "271:10:1"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 116,
                                          "type": "uint256",
                                          "value": "randNonce"
                                        },
                                        "id": 133,
                                        "name": "Identifier",
                                        "src": "283:9:1"
                                      }
                                    ],
                                    "id": 134,
                                    "name": "FunctionCall",
                                    "src": "249:44:1"
                                  }
                                ],
                                "id": 135,
                                "name": "FunctionCall",
                                "src": "239:55:1"
                              }
                            ],
                            "id": 136,
                            "name": "FunctionCall",
                            "src": "234:61:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 118,
                              "type": "uint256",
                              "value": "_modulus"
                            },
                            "id": 137,
                            "name": "Identifier",
                            "src": "298:8:1"
                          }
                        ],
                        "id": 138,
                        "name": "BinaryOperation",
                        "src": "234:72:1"
                      }
                    ],
                    "id": 139,
                    "name": "Return",
                    "src": "227:79:1"
                  }
                ],
                "id": 140,
                "name": "Block",
                "src": "194:120:1"
              }
            ],
            "id": 141,
            "name": "FunctionDefinition",
            "src": "139:175:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "attack",
              "scope": 171,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "external"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_zombieId",
                      "scope": 170,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 142,
                        "name": "ElementaryTypeName",
                        "src": "339:4:1"
                      }
                    ],
                    "id": 143,
                    "name": "VariableDeclaration",
                    "src": "339:14:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_targetId",
                      "scope": 170,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint",
                          "type": "uint256"
                        },
                        "id": 144,
                        "name": "ElementaryTypeName",
                        "src": "355:4:1"
                      }
                    ],
                    "id": 145,
                    "name": "VariableDeclaration",
                    "src": "355:14:1"
                  }
                ],
                "id": 146,
                "name": "ParameterList",
                "src": "338:32:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 150,
                "name": "ParameterList",
                "src": "399:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 358,
                      "type": "modifier (uint256)",
                      "value": "ownerOf"
                    },
                    "id": 147,
                    "name": "Identifier",
                    "src": "380:7:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 143,
                      "type": "uint256",
                      "value": "_zombieId"
                    },
                    "id": 148,
                    "name": "Identifier",
                    "src": "388:9:1"
                  }
                ],
                "id": 149,
                "name": "ModifierInvocation",
                "src": "380:18:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        152
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "myZombie",
                          "scope": 169,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct ZombieFactory.Zombie",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Zombie",
                              "referencedDeclaration": 204,
                              "type": "struct ZombieFactory.Zombie"
                            },
                            "id": 151,
                            "name": "UserDefinedTypeName",
                            "src": "410:6:1"
                          }
                        ],
                        "id": 152,
                        "name": "VariableDeclaration",
                        "src": "410:23:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct ZombieFactory.Zombie storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 207,
                              "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                              "value": "zombies"
                            },
                            "id": 153,
                            "name": "Identifier",
                            "src": "436:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 143,
                              "type": "uint256",
                              "value": "_zombieId"
                            },
                            "id": 154,
                            "name": "Identifier",
                            "src": "444:9:1"
                          }
                        ],
                        "id": 155,
                        "name": "IndexAccess",
                        "src": "436:18:1"
                      }
                    ],
                    "id": 156,
                    "name": "VariableDeclarationStatement",
                    "src": "410:44:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        158
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "enemyZombie",
                          "scope": 169,
                          "stateVariable": false,
                          "storageLocation": "storage",
                          "type": "struct ZombieFactory.Zombie",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Zombie",
                              "referencedDeclaration": 204,
                              "type": "struct ZombieFactory.Zombie"
                            },
                            "id": 157,
                            "name": "UserDefinedTypeName",
                            "src": "465:6:1"
                          }
                        ],
                        "id": 158,
                        "name": "VariableDeclaration",
                        "src": "465:26:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "type": "struct ZombieFactory.Zombie storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 207,
                              "type": "struct ZombieFactory.Zombie storage ref[] storage ref",
                              "value": "zombies"
                            },
                            "id": 159,
                            "name": "Identifier",
                            "src": "494:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 145,
                              "type": "uint256",
                              "value": "_targetId"
                            },
                            "id": 160,
                            "name": "Identifier",
                            "src": "502:9:1"
                          }
                        ],
                        "id": 161,
                        "name": "IndexAccess",
                        "src": "494:18:1"
                      }
                    ],
                    "id": 162,
                    "name": "VariableDeclarationStatement",
                    "src": "465:47:1"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        164
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "rand",
                          "scope": 169,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint",
                              "type": "uint256"
                            },
                            "id": 163,
                            "name": "ElementaryTypeName",
                            "src": "523:4:1"
                          }
                        ],
                        "id": 164,
                        "name": "VariableDeclaration",
                        "src": "523:9:1"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 141,
                              "type": "function (uint256) returns (uint256)",
                              "value": "randMod"
                            },
                            "id": 165,
                            "name": "Identifier",
                            "src": "535:7:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "313030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 100",
                              "value": "100"
                            },
                            "id": 166,
                            "name": "Literal",
                            "src": "543:3:1"
                          }
                        ],
                        "id": 167,
                        "name": "FunctionCall",
                        "src": "535:12:1"
                      }
                    ],
                    "id": 168,
                    "name": "VariableDeclarationStatement",
                    "src": "523:24:1"
                  }
                ],
                "id": 169,
                "name": "Block",
                "src": "399:156:1"
              }
            ],
            "id": 170,
            "name": "FunctionDefinition",
            "src": "323:232:1"
          }
        ],
        "id": 171,
        "name": "ContractDefinition",
        "src": "67:491:1"
      }
    ],
    "id": 172,
    "name": "SourceUnit",
    "src": "0:558:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-05T09:41:04.987Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}